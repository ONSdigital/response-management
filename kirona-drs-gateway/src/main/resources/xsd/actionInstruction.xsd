<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://ons.gov.uk/ctp/response/action/message/instruction"
           targetNamespace="http://ons.gov.uk/ctp/response/action/message/instruction">

    <!-- The root element for an outbound action instruction to an action consumer -->
    <xs:element name="actionInstruction" type="ActionInstruction"/>

    <!--  the instruction can have either request(s), update(s) or cancel(s), but never mixed instruction types -->
    <xs:complexType name="ActionInstruction">
        <xs:choice>
            <xs:element name="actionRequests" type="ActionRequests"/>
            <xs:element name="actionUpdates" type="ActionUpdates"/>
            <xs:element name="actionCancels" type="ActionCancels"/>
        </xs:choice>
    </xs:complexType>

    <!-- the outer element containing requests -->
    <xs:complexType name="ActionRequests">
        <xs:sequence>
            <xs:element name="actionRequest" type="ActionRequest" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- the outer element containing updates -->
    <xs:complexType name="ActionUpdates">
        <xs:sequence>
            <xs:element name="actionUpdate" type="ActionUpdate" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- the outer element containing cancels -->
    <xs:complexType name="ActionCancels">
        <xs:sequence>
            <xs:element name="actionCancel" type="ActionCancel" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- a complex type for addresses - no statistical geography info  -->
    <xs:complexType name="ActionAddress">
        <xs:sequence>
            <xs:element name="addressType" type="xs:string"/>
            <xs:element name="estabType" type="xs:string"/>
            <xs:element name="locality" type="xs:string"/>
            <xs:element name="organisationName" type="xs:string"/>
            <xs:element name="addressLine1" type="xs:string"/>
            <xs:element name="addressLine2" type="xs:string"/>
            <xs:element name="townName" type="xs:string"/>
            <xs:element name="postcode" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!--  a complex type for request instructions -->
    <xs:complexType name="ActionRequest">
        <xs:sequence>
            <xs:element name="actionId" type="xs:positiveInteger"/>
            <xs:element name="actionType" type="xs:string"/>
            <xs:element name="address" type="ActionAddress"/>
            <xs:element name="latitude" type="xs:decimal"/>
            <xs:element name="longitude" type="xs:decimal"/>
            <xs:element name="uprn" type="xs:positiveInteger"/>
            <xs:element name="contactName" type="xs:string"/>
            <xs:element name="caseId" type="xs:positiveInteger"/>
            <xs:element name="priority" type="Priority" />
            <xs:element name="questionnaireId" type="xs:positiveInteger"/>
            <xs:element name="iac" type="xs:string"/>
            <xs:element name="events" type="ActionEvent"/>
        </xs:sequence>
    </xs:complexType>

    <!--  a complex and reused type constraining the priority element -->
    <xs:simpleType name="Priority">
        <xs:restriction base="xs:string">
            <xs:enumeration value="highest" />
            <xs:enumeration value="higher" />
            <xs:enumeration value="medium" />
            <xs:enumeration value="lower" />
            <xs:enumeration value="lowest" />
        </xs:restriction>
    </xs:simpleType>


    <!--  a complex type for containing multiple action event elements -->
    <xs:complexType name="ActionEvent">
        <xs:sequence>
            <xs:element name="event" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>


    <!--  a complex type for cancel instructions -->
    <xs:complexType name="ActionCancel">
        <xs:sequence>
            <xs:element name="actionId" type="xs:positiveInteger"/>
            <xs:element name="reason" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!--  a complex type for update instructions -->
    <xs:complexType name="ActionUpdate">
        <xs:sequence>
            <xs:element name="actionId" type="xs:positiveInteger"/>
            <xs:element name="priority" type="Priority" />
            <xs:element name="events" type="ActionEvent"/>
        </xs:sequence>
    </xs:complexType>

</xs:schema>