<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jms="http://www.springframework.org/schema/jms" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:int-jme="http://www.springframework.org/schema/integration"
  xmlns:int="http://www.springframework.org/schema/integration"
  xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
  xmlns:int-http="http://www.springframework.org/schema/integration/http"
  xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
  xmlns:int-file="http://www.springframework.org/schema/integration/file"
  xsi:schemaLocation="http://www.springframework.org/schema/beans   
  http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
  http://www.springframework.org/schema/context  
  http://www.springframework.org/schema/context/spring-context-4.2.xsd  
  http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
  http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
  http://www.springframework.org/schema/jms  
  http://www.springframework.org/schema/jms/spring-jms-4.2.xsd
  http://www.springframework.org/schema/integration/file
  http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
  http://www.springframework.org/schema/integration/http
  http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
  http://www.springframework.org/schema/integration/xml
  http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd">

  <!--  First the inbound flow -->

  <!-- need an input channel defined for MQ adapter to input to -->
  <int:channel id="feedbackXml" />

  <!-- anything sent to this channel is written to disk -->
  <int:channel id="feedbackXmlInvalid" />
  <int-file:outbound-channel-adapter directory ="/var/log/ctp/responsemanagement/actionsvc/feedback" channel="feedbackXmlInvalid"/>	

  <!-- the MQ channel adapter reads from testQueue (see the container above) and inputs to feedback.xml -->
  <int-jms:message-driven-channel-adapter
    id="jmsIn" container="feedbackMessageListenerContainer" channel="feedbackXml" />

  <!-- First the SI message provided by the channel adapter is validated against the inbound schema -->
  <int-xml:validating-filter id="feedbackValidator" input-channel="feedbackXml"
    output-channel="feedbackXmlValid" schema-location="classpath:xsd/actionFeedback.xsd" discard-channel="feedbackXmlInvalid"/>

  <!-- Secondly the now validated xml is transformed into the jaxb generated object model -->
  <int:channel id="feedbackTransformed"/>
  <int-xml:unmarshalling-transformer
    input-channel="feedbackXmlValid" output-channel="feedbackTransformed"
    unmarshaller="feedbackUnmarshaller" />
  
  <!-- The transformer uses this unmarshaller to do the heavy (un)lifting -->
  <bean id="feedbackUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
    <property name="contextPath" value="uk.gov.ons.ctp.response.action.message.feedback" />
  </bean>
  

  <!--  Now configure the outbound flow -->
  <!-- setup the outbound jms queues -->
  <bean id="fieldInstructionQueue" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg value="Action.Field"/>
  </bean>
  <bean id="printerInstructionQueue" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg value="Action.Printer"/>
  </bean>
  <bean id="supportInstructionQueue" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg value="Action.CensusSupport"/>
  </bean>
  <bean id="householdSurveyInstructionQueue" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg value="Action.HHSurvey"/>
  </bean>
  <bean id="hotelSurveyInstructionQueue" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg value="Action.HotelSurvey"/>
  </bean>


  <int:annotation-config/>
  <!--  setup the outbound channels - note each queue needs a channel -->
  <int:channel id="instructionOutbound" />
  <int:channel id="instructionXml" />
  <int:channel id="instructionField" />
  <int:channel id="instructionPrinter" />
  <int:channel id="instructionCensusSupport" />
  <int:channel id="instructionHHSurvey" />
  <int:channel id="instructionHotelSurvey" />

  <!--  the @Publisher sends to the marshalling-transformers input channel -->
  <int-xml:marshalling-transformer
    input-channel="instructionOutbound" output-channel="instructionXml"
    marshaller="instructionMarshaller" 
    result-transformer="instructionTransformer"/>
   <!--  the instructionMarshaller turns java objs into xml dom -->
  <bean id="instructionMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
    <property name="contextPath" value="uk.gov.ons.ctp.response.action.message.instruction" />
  </bean>
  <!--  the instructionTransformer turns the xml dom into a string -->
  <bean id="instructionTransformer" class="org.springframework.integration.xml.transformer.ResultToStringTransformer" />

  <!-- the router ... routes ... using the header 'HANDLER' set by the @Publisher -->
  <!-- the  SpEL constructs the channel name to send our xml string to -->
  <int:router input-channel="instructionXml" expression="'instruction'.concat(headers.HANDLER)" />

  <!--  each channel adapter listens to one of our routed channels and adapts the SI message to a JMS message -->
  <int-jms:outbound-channel-adapter id="jmsout.Field" channel="instructionField" destination="fieldInstructionQueue"/>
  <int-jms:outbound-channel-adapter id="jmsout.Printer" channel="instructionPrinter" destination="printerInstructionQueue"/>
  <int-jms:outbound-channel-adapter id="jmsout.CensusSupport" channel="instructionCensusSupport" destination="supportInstructionQueue"/>
  <int-jms:outbound-channel-adapter id="jmsout.HHSurvey" channel="instructionHHSurvey" destination="householdSurveyInstructionQueue"/>
  <int-jms:outbound-channel-adapter id="jmsout.HotelSurvey" channel="instructionHotelSurvey" destination="hotelSurveyInstructionQueue"/>
</beans>

