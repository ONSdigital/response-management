<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
       xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
  http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
  http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
  http://www.springframework.org/schema/integration/xml
  http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd">

    <bean id="actionFeedbackMessageListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destinationName" value="Action.Feedback" />
        <property name="maxConcurrentConsumers" value="1" />
        <property name="concurrentConsumers" value="1" />
        <property name="receiveTimeout" value="5000" />
        <property name="recoveryInterval" value="60000" />
        <property name="autoStartup" value="true" />
        <property name="sessionTransacted" value="true" />
    </bean>

    <!-- need an input channel defined for MQ adapter to input to -->
    <int:channel id="actionFeedbackXml" />

    <!-- the MQ channel adapter reads from testQueue (see the container above) and inputs to feedback.xml -->
    <int-jms:message-driven-channel-adapter id="jmsIn" container="actionFeedbackMessageListenerContainer" channel="actionFeedbackXml" />

    <!-- First the SI message provided by the channel adapter is validated against the inbound schema -->
    <!-- Option to be used in Debug/Test: throw-exception-on-rejection="true" -->
    <int:channel id="actionFeedbackXmlInvalid" />
    <bean id="invalidActionFeedbackQueue" class="com.rabbitmq.jms.admin.RMQDestination">
        <constructor-arg name="destName" value="Action.InvalidActionFeedback"/>
        <constructor-arg name="isQueue" value="true"/>
        <constructor-arg name="isTemporary" value="false"/>
    </bean>
    <int-jms:outbound-channel-adapter id="invalidActionFeedbackJmsOut" destination="invalidActionFeedbackQueue" channel="actionFeedbackXmlInvalid"/>
    <int-xml:validating-filter id="actionFeedbackValidator" input-channel="actionFeedbackXml"
                               output-channel="actionFeedbackXmlValid" schema-location="classpath:xsd/actionFeedback.xsd" discard-channel="actionFeedbackXmlInvalid"/>

    <!-- Secondly the now validated xml is transformed into the jaxb generated object model -->
    <int:channel id="actionFeedbackTransformed" datatype="uk.gov.ons.ctp.response.action.message.feedback.ActionFeedback">
    </int:channel>
    <int-xml:unmarshalling-transformer
            input-channel="actionFeedbackXmlValid" output-channel="actionFeedbackTransformed"
            unmarshaller="actionFeedbackUnmarshaller" />

    <!-- The transformer uses this unmarshaller to do the heavy (un)lifting -->
    <bean id="actionFeedbackUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="uk.gov.ons.ctp.response.action.message.feedback" />
    </bean>
</beans>
