<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
  http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

	<!-- maximumRedeliveries default is 6, don't want any in test where designing 
		failure and checking DLQ -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.SingleConnectionFactory">
		<property name="targetConnectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL"
					value="vm://localhost?broker.persistent=false&amp;jms.redeliveryPolicy.maximumRedeliveries=0" />
				<property name="dispatchAsync" value="false" />
			</bean>
		</property>
	</bean>

	<bean id="feedbackMessageListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destinationName" value="feedbackQueue" />
		<property name="maxConcurrentConsumers" value="1" />
		<property name="concurrentConsumers" value="1" />
		<property name="receiveTimeout" value="5000" />
		<property name="recoveryInterval" value="60000" />
		<property name="autoStartup" value="true" />
	</bean>

	<!-- The in-bound Case Notification message container config sessionTransacted 
		must be 1 as for live config. Each message listener invocation will then 
		operate within an active JMS transaction, with message reception rolled back 
		in case of listener execution failure. -->
	<bean id="caseMessageListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destinationName" value="Case.Notifications" />
		<property name="sessionTransacted" value="true" />
		<property name="maxConcurrentConsumers" value="1" />
		<property name="concurrentConsumers" value="1" />
		<property name="receiveTimeout" value="5000" />
		<property name="recoveryInterval" value="60000" />
		<property name="autoStartup" value="true" />
	</bean>

</beans>

